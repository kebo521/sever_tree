/*****************************内存管理******************************
//功能-------  用于动态申请公共内存
//作者-------  邓国祖
//创作时间--20130604
//修改: ( 邓国祖) 20131213   --V2(重新整合释放的内存，起用回收机制)
//修改: ( 邓国祖) 20131213   --V3(增加内存申请快速切入口，
				申请与释放的效率提高53.00%(V2-59037,V3-27755))
//修改: ( 邓国祖) 20140612   --V4(增加结构体向上的指针,释放内存速度大幅度提升)
//修改: ( 邓国祖) 20150504   --V5(增加结构体向上的指针参数,释放内存速度大幅度提升)
				综合申请与释放的效率提高36.06%(V3-87243,V5-55786),(V4相比V3提升不大,所有未发布正试版)
//修改: ( 邓国祖) 20161108   --V6(增加预授内存空间与完成内存空间预授两个功能)
//修改: ( 邓国祖) 20161118   --V7(增加虚拟空闲关连排列表(从小到大)，进一步提升内存使用效率，
									综合申请与释放的效率提高29.1%(256:V6-7077,V7-5010),V6相比V5相同)
//修改: ( 邓国祖) 20170224   --V8(在V7的(12 byte)基础上，减少4个字节(8 byte)的节点空间，提高空间利用率，
									但降低了处理总空间：V8=64K，（适应于单片机），V7=4G（32位系统）
								    综合申请与释放的效率降低13%(WinDow:10*10000*256:V7=6205,V8=6821)。
******************************************************************************/

#ifndef _RAM_MANAGEMENT_
#define _RAM_MANAGEMENT_

#ifdef __cplusplus
extern "C" {
#endif


//====================================================================
//功能:    用于初始化内存分配空间 (导入用于内存分配的空间)
//输入数据:mem_addr所申请区域的首地址,mem_size,可以使用的内存大小,particle_size 最小申请单元,取值为2^(2+n)
//输出数据:返回为0成功，其它失败
//创作时间:  	20130604
//---------------------------------------------------------------
extern int gMemAllocInit(void* mem_addr,unsigned mem_size,unsigned particle_size);

//====================================================================
//功能:    用于申请连续内存空间(实现标准 malloc)
//输入数据:silen 需要申请内存大小
//输出数据:所申请区域的首地址（使用时，不能超出申请范围），申请失败时返回为空地址,
//---------------------------------------------------------------
extern void *gMalloc(unsigned silen);

//====================================================================
//功能:    用于释放已申请的内存(实现标准 free)
//输入数据:pfree所申请区域的首地址，为空不处理。
//---------------------------------------------------------------
extern void gFree(void *pfree);

//====================================================================
//功能:    用于重新分配内存空间 (实现标准 realloc)
//输入数据:pMemory所分配的内存地址   silen 需要预授内存大小(0释放预授空间)
//输出数据:返回结果(0表示成功)
//---------------------------------------------------------------
extern void* gRealloc(void *pMemory,unsigned silen);

//====================================================================
//功能:    用于预授内存空间，(再不明确内存大小需求情况下使用)
//输入数据:sPreLen 需要预授内存大小(0为系统最大空间)
//输出数据:所申请区域的首地址(申请失败时返回为空地址)，OutSize预授空间实际值
//---------------------------------------------------------------
extern void *gPralloc(unsigned sPreLen,unsigned *OutSize);


//====================================================================
//功能:    用于显示内在使用睛况(主要用于调试)
//---------------------------------------------------------------
extern int gCheckAllocStatus(char *pStrout,int *pNum,int *pMaxNum,int *UseLen);

//==============提示信息结构显示========================================
typedef void (*PFUNC_SHOW_MSG)(char*,char*,int);	//pTitle,pMsg,par
/* demo
void UI_ShowMemMsg(char* pTitle,char* pMsg,int Mpar)
{
	char showErr[24];
	API_sprintf(showErr,pMsg,Mpar);
	APP_ShowMsg(pTitle,showErr,10000);
}
*/
//====================================================================
//功能:    异常信息输出功能函数
//输入数据:pFun 信息异常时，需要输出功能操作
//输出数据:无
//注:功能函数结构(pTitle,pMsg,Mpar)分别是显示标题，显示内容，结构化显示参数
//---------------------------------------------------------------
void gLoadFunAllocShowMsg(PFUNC_SHOW_MSG pFun);


//---------通用函数接口定义----------------
//#define		malloc	        gMalloc			
//#define		free			gFree
//#define		realloc			gRealloc


#define		FreeNull(p) {gFree(p); p=NULL;}


#ifdef __cplusplus
}
#endif

#endif	//_RAM_MANAGEMENT_
